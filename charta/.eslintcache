[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx":"10","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx":"11","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx":"12","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx":"13","/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx":"14"},{"size":504,"mtime":1613510455080,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1612064695741,"results":"17","hashOfConfig":"16"},{"size":939,"mtime":1613515179908,"results":"18","hashOfConfig":"16"},{"size":2606,"mtime":1613536932603,"results":"19","hashOfConfig":"16"},{"size":558,"mtime":1613510455077,"results":"20","hashOfConfig":"16"},{"size":1401,"mtime":1613079244111,"results":"21","hashOfConfig":"16"},{"size":2689,"mtime":1613535372453,"results":"22","hashOfConfig":"16"},{"size":9662,"mtime":1613512468133,"results":"23","hashOfConfig":"16"},{"size":527,"mtime":1613079244114,"results":"24","hashOfConfig":"16"},{"size":5826,"mtime":1613537524631,"results":"25","hashOfConfig":"16"},{"size":1232,"mtime":1613510455078,"results":"26","hashOfConfig":"16"},{"size":5451,"mtime":1613519022437,"results":"27","hashOfConfig":"16"},{"size":791,"mtime":1613510455078,"results":"28","hashOfConfig":"16"},{"size":3928,"mtime":1613538410063,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"waydk2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["65","66"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["67"],"import {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n\n// @ts-ignore\nimport SignIn from './auth/signin';\n// @ts-ignore\nimport SignUp from \"./auth/signup\";\nimport NotFound from './components/notfound'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n// @ts-ignore\nimport Home from './components/home';\nimport Settings from './account/settings';\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route exact path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n\n            </Router>\n\n          );\n    }\n}\n\n\nexport default App;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",["68"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],["69","70"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["71"],"import {Component} from \"react\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport '../firebase';\n\n\ninterface QuarterState {\n    open: boolean;\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    courses: Array<any>;\n    newCourse: string;\n    newTitle: string;\n    newUnits: number;\n    newGrade: string;\n    newReason: string;\n}\ninterface QuarterProps {\n    name: string\n}\n\nclass Quarter extends Component<QuarterProps, QuarterState> {\n\n    async componentDidMount() {\n        const db = firebase.firestore();\n\n        const userRef = db.collection('users').doc('ruben1');\n        const doc = await userRef.get();\n        if (!doc.exists) {\n            console.log('No such document!');\n        } else {\n            console.log('Document data:', doc.data());\n        }\n\n    }\n\n\n    constructor(props: QuarterProps) {\n        super(props);\n\n        const courses = [\n            this.createData('CS110', 'Principles of Computer Systems', 5, 'A', 'CS Core'),\n            this.createData('MATH51', 'Linear Algebra and Differential Calculus of Several Variables', 5, 'A', \"Math elective\"),\n            this.createData('BIOE131', 'Ethics in Bioengineering', 3, 'A', \"TiS\"),\n            this.createData('PSYCH1', 'Introduction to Psychology', 5, 'A', \"Fun\"),\n        ];\n\n\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n\n        this.state = {open: false, onClick: this.handleOpen, courses: courses, newCourse: '', newTitle: '', newGrade: '', newUnits: 0, newReason: ''};\n\n\n    }\n\n\n    handleOpen() {\n        this.setState({open: true});\n    }\n\n    handleClose() {\n        this.setState({open: false});\n    }\n\n    async addCourse() {\n        this.state.courses.push(this.createData(this.state.newCourse, this.state.newTitle, this.state.newUnits, this.state.newGrade, this.state.newReason));\n\n        const db = firebase.firestore();\n\n        // const userRef = db.collection('users').doc('ruben1');\n        // const doc = await userRef.get();\n        //\n        //  .doc('LA').set({\n        //     name: 'Los Angeles', state: 'CA', country: 'USA',\n        //     capital: false, population: 3900000\n        // });\n\n        this.handleClose();\n    }\n\n    createData(number: string, title: string, units: number, grade: string, reason: string) {\n        return {number, title, units, grade, reason };\n    }\n\n    render() {\n\n        return (\n            <Accordion>\n                <AccordionSummary>{this.props.name}</AccordionSummary>\n                <AccordionDetails>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Course Number</TableCell>\n                                    <TableCell align=\"right\">Title</TableCell>\n                                    <TableCell align=\"right\">Units</TableCell>\n                                    <TableCell align=\"right\">Grade</TableCell>\n                                    <TableCell align=\"right\">Reason</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.courses.map((course) => (\n                                    <TableRow key={course.number}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {course.number}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{course.title}</TableCell>\n                                        <TableCell align=\"right\">{course.units}</TableCell>\n                                        <TableCell align=\"right\">{course.grade}</TableCell>\n                                        <TableCell align=\"right\">{course.reason}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                            <TableRow>\n                                <TableCell>Total</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\">18</TableCell>\n                                <TableCell align=\"right\">4.0</TableCell>\n                                <TableCell align=\"right\"><Button onClick={this.handleOpen}><AddCircleIcon/></Button></TableCell>\n\n                                <Dialog open={this.state.open}>\n                                    <DialogTitle>Add a course</DialogTitle>\n                                    <DialogContent>\n                                        {/*<DialogContentText>*/}\n                                        {/*    To subscribe to this website, please enter your email address here. We will send updates*/}\n                                        {/*    occasionally.*/}\n                                        {/*</DialogContentText>*/}\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"course\"\n                                            type=\"text\"\n                                            value={this.state.newCourse}\n                                            onChange={(evt) => this.setState({newCourse: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"title\"\n                                            label=\"title\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newTitle: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"units\"\n                                            label=\"units\"\n                                            type=\"number\"\n                                            onChange={(evt) => this.setState({newUnits: parseInt(evt.target.value)})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"grade\"\n                                            label=\"grade\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newGrade: evt.target.value})}\n                                            fullWidth\n                                        />\n\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"reason\"\n                                            label=\"reason\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newReason: evt.target.value})}\n                                            fullWidth\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleClose} color=\"primary\">\n                                            Cancel\n                                        </Button>\n\n                                        <Button onClick={this.addCourse} color=\"primary\">\n                                            Add\n                                        </Button>\n                                    </DialogActions>\n\n                                </Dialog>\n\n                            </TableRow>\n                        </Table>\n\n                    </TableContainer>\n                </AccordionDetails>\n\n            </Accordion>\n\n        );\n    }\n}\n\nexport default Quarter\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],["72","73"],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx",["74","75"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx",["76"],"import React, {Component} from 'react';\n// import logo from './logo.svg';\n// import { BrowserRouter, Route, } from 'react-router-dom';\n// import Login from './login';\nimport Header from './header';\nimport Footer from './footer';\n// @ts-ignore\n// import ClassCard from './card';\n// @ts-ignore\nimport Planner from './planner';\n\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport {Redirect} from \"react-router\";\n\ninterface HomeState {\n    signedIn: boolean\n}\n\ninterface HomeProps {\n\n}\n\nclass Home extends Component<HomeProps, HomeState>{\n\n    constructor(props: HomeProps) {\n        super(props);\n        this.state = {signedIn: false}\n    }\n\n\n    render() {\n\n        if(firebase.auth().currentUser){\n            return (\n                <div className=\"flex flex-col h-screen justify-between\">\n                    <Header/>\n                    {/*<ClassCard name=\"Math 51\" term=\"Spring 2021\"/>*/}\n                    {/*<ClassCard name=\"CS 110\" term=\"Winter 2021\"/>*/}\n                    <Planner/>\n                    <Footer/>\n\n                </div>\n            );\n        }\n        else{\n            return <Redirect to='/signin'/>;\n        }\n    }\n\n\n\n}\n\n\nexport default Home;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx",["77","78"],"import React, {Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport { Redirect } from 'react-router'\nimport logo from '.Logo.png';\n\n\ninterface SignUpProps extends RouteComponentProps<any> {\n\n}\n\n\ninterface SignUpState{\n    email: string,\n    password: string,\n    confirmPassword: string,\n    redirect: boolean,\n    errorMsg: string\n}\n\n\nclass SignUp extends Component<SignUpProps, SignUpState> {\n\n\n    constructor(props: SignUpProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {email: '',  password: '', confirmPassword: '', redirect: false, errorMsg: ''}\n\n    }\n\n\n    handleSubmit(e:  React.FormEvent) {\n        e.preventDefault();\n\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                var user = userCredential.user;\n                this.setState({redirect: true})\n\n            })\n            .catch((error) => {\n                this.setState({errorMsg: error.message})\n            });\n\n    }\n\n\n    render() {\n        if(this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n\n        return(\n            <Container maxWidth=\"sm\">\n                <div>\n\n\n                    <img alt=\"Charta logo\" src={\"./Logo.png\"}/>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign up\n                    </Typography>\n\n                    <form noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={(evt) => this.setState({email: evt.target.value})}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(evt) => this.setState({password: evt.target.value})}\n\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Confirm password\"\n                            type=\"password\"\n                            id=\"confirmPassword\"\n                            onChange={(evt) => this.setState({confirmPassword: evt.target.value})}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <p>{this.state.errorMsg}</p>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container>\n\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(SignUp);","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx",["79"],"/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx",["80","81","82","83","84","85","86","87","88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":73,"column":89,"nodeType":"102","endLine":73,"endColumn":93},{"ruleId":"92","replacedBy":"103"},{"ruleId":"94","replacedBy":"104"},{"ruleId":"96","severity":1,"message":"105","line":87,"column":15,"nodeType":"98","messageId":"99","endLine":87,"endColumn":17},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"106","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":13},{"ruleId":"96","severity":1,"message":"107","line":65,"column":21,"nodeType":"98","messageId":"99","endLine":65,"endColumn":25},{"ruleId":"96","severity":1,"message":"108","line":12,"column":27,"nodeType":"98","messageId":"99","endLine":12,"endColumn":33},{"ruleId":"96","severity":1,"message":"109","line":17,"column":8,"nodeType":"98","messageId":"99","endLine":17,"endColumn":12},{"ruleId":"96","severity":1,"message":"107","line":52,"column":21,"nodeType":"98","messageId":"99","endLine":52,"endColumn":25},{"ruleId":"96","severity":1,"message":"108","line":7,"column":26,"nodeType":"98","messageId":"99","endLine":7,"endColumn":32},{"ruleId":"96","severity":1,"message":"110","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":22},{"ruleId":"96","severity":1,"message":"111","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":17},{"ruleId":"96","severity":1,"message":"112","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":25},{"ruleId":"96","severity":1,"message":"113","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"114","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":14},{"ruleId":"96","severity":1,"message":"115","line":13,"column":8,"nodeType":"98","messageId":"99","endLine":13,"endColumn":19},{"ruleId":"96","severity":1,"message":"116","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":12},{"ruleId":"96","severity":1,"message":"117","line":16,"column":8,"nodeType":"98","messageId":"99","endLine":16,"endColumn":15},{"ruleId":"96","severity":1,"message":"118","line":17,"column":8,"nodeType":"98","messageId":"99","endLine":17,"endColumn":16},{"ruleId":"96","severity":1,"message":"119","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":20},{"ruleId":"96","severity":1,"message":"120","line":19,"column":8,"nodeType":"98","messageId":"99","endLine":19,"endColumn":20},{"ruleId":"96","severity":1,"message":"121","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":20},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["122"],["123"],"'db' is assigned a value but never used.","'Modal' is defined but never used.","'user' is assigned a value but never used.","'Router' is defined but never used.","'logo' is defined but never used.","'InputAdornment' is defined but never used.","'EmailIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'firebase' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'SettingsIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]