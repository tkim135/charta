[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx":"10","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx":"11","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx":"12","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx":"13","/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx":"14","/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx":"15","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx":"16","/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx":"17","/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx":"18"},{"size":504,"mtime":1613875847945,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1612064695741,"results":"21","hashOfConfig":"20"},{"size":939,"mtime":1613945405204,"results":"22","hashOfConfig":"20"},{"size":2249,"mtime":1614010734596,"results":"23","hashOfConfig":"20"},{"size":558,"mtime":1613510455077,"results":"24","hashOfConfig":"20"},{"size":1401,"mtime":1613079244111,"results":"25","hashOfConfig":"20"},{"size":7771,"mtime":1614010741344,"results":"26","hashOfConfig":"20"},{"size":10643,"mtime":1614010741345,"results":"27","hashOfConfig":"20"},{"size":527,"mtime":1613079244114,"results":"28","hashOfConfig":"20"},{"size":5783,"mtime":1613945405208,"results":"29","hashOfConfig":"20"},{"size":1442,"mtime":1614010734596,"results":"30","hashOfConfig":"20"},{"size":7509,"mtime":1614010734595,"results":"31","hashOfConfig":"20"},{"size":791,"mtime":1613510455078,"results":"32","hashOfConfig":"20"},{"size":7891,"mtime":1614016167061,"results":"33","hashOfConfig":"20"},{"size":3893,"mtime":1613945405212,"results":"34","hashOfConfig":"20"},{"size":1017,"mtime":1613858167457,"results":"35","hashOfConfig":"20"},{"size":442,"mtime":1613945405213,"results":"36","hashOfConfig":"20"},{"size":845,"mtime":1613945405212,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"waydk2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["80","81"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["82"],"import {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n\n// @ts-ignore\nimport SignIn from './auth/signin';\n// @ts-ignore\nimport SignUp from \"./auth/signup\";\nimport NotFound from './components/notfound'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n// @ts-ignore\nimport Home from './components/home';\nimport Settings from './account/settings';\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route exact path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n\n            </Router>\n\n          );\n    }\n}\n\n\nexport default App;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",["83","84","85","86"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],["87","88"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["89"],"/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],["90","91"],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx",["92","93"],"import React, {Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport { Redirect } from 'react-router'\nimport {Link } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\n\ninterface SigninProps extends RouteComponentProps<any> {\n\n}\n\n\ninterface SigninState{\n    email: string,\n    password: string,\n    redirect: boolean,\n    failed: boolean,\n    errorMsg: string\n}\n\nclass Signin extends Component<SigninProps, SigninState> {\n\n    // componentDidMount() {\n    //     let signedIn = false;\n    //     firebase.auth().onAuthStateChanged(function(user) {\n    //         if (user) {\n    //             signedIn = true;\n    //         }\n    //     });\n    //\n    //     if(signedIn) {\n    //         this.setState({redirect: true});\n    //     }\n    //\n    // }\n\n\n    constructor(props: SigninProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {email: '',  password: '', redirect: false, failed: false, errorMsg: ''}\n        this.handleEmailReset = this.handleEmailReset.bind(this);\n\n    }\n\n\n    handleSubmit(e:  React.FormEvent) {\n        e.preventDefault();\n\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                var user = userCredential.user;\n                this.setState({redirect: true });\n\n            })\n            .catch((error) => {\n                console.log(error.code, error.message);\n                this.setState({failed: true})\n                this.setState({errorMsg: error.message})\n\n            });\n    }\n\n    handleClose() {\n\n    }\n\n    handleEmailReset() {\n\n    }\n\n\n\n\n    render() {\n\n        if(this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n\n        return(\n            <Container maxWidth=\"sm\">\n                <div>\n                    <img alt=\"Charta logo\" src={\"./Logo.png\"}/>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign in\n                    </Typography>\n                    <form noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={(evt) => this.setState({email: evt.target.value})}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(evt) => this.setState({password: evt.target.value})}\n                            autoComplete=\"current-password\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <p>{this.state.errorMsg}</p>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            <strong>Sign In</strong>\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <p onClick={this.handleEmailReset}>\n                                    Forgot password?\n                                </p>\n                            </Grid>\n\n\n                            <Grid item>\n                                <Link to=\"/signup\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(Signin);\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx",["94","95","96"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx",["97"],"/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx",["98","99"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx",["100","101"],"import fetch from 'cross-fetch';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {Component} from 'react';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Course from \"../data/course\";\n\n\ninterface SearchBarState {\n    loading: boolean,\n    open: boolean,\n    suggestions: Array<Course>,\n    query: string\n}\n\ninterface SearchBarProps {\n\n}\n\n\n\nclass SearchBar extends Component<SearchBarProps, SearchBarState>{\n\n\n    constructor(props: SearchBarProps) {\n        super(props);\n        this.state = {loading: false, open: false, suggestions: [], query: ''};\n\n        this.setOpen = this.setOpen.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setOpen(open: boolean) {\n\n    }\n\n    async onInputChange(event: object, value: string) {\n\n        const db = firebase.firestore();\n        // const ref = db.collection(\"courses\");\n        // const query  = ref.where(\"title\", \"array-contains\", \"value\");\n\n        const coursesRef = await db.collection('classes');\n\n        var query = coursesRef.where('title', 'array-contains', value).get()\n            .then(querySnapshot => {\n                if (querySnapshot.empty) {\n                    console.log(\"nothing found\");\n\n                } else {\n                    // for(Document doc in querySnapshot.docs) {\n                    //     // var doc = querySnapshot.docs[0];\n                    //     console.log('Document data:', doc.data());\n                    //\n                    // }\n                    querySnapshot.docs.forEach(doc => console.log(doc.data()));\n\n                }\n            })\n            .catch(err => {\n                console.log('Error getting document', err);\n            });\n\n\n    }\n\n    onChange() {\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Autocomplete\n                    id=\"search\"\n                    style={{ width: 600 }}\n                    open={this.state.open}\n                    onOpen={() => {\n                        this.setOpen(true);\n                    }}\n                    onClose={() => {\n                        this.setOpen(false);\n                    }}\n                    options={this.state.suggestions}\n                    getOptionSelected={(course, value) => course.title === value.title}\n                    getOptionLabel={(course) => course.title}\n                    loading={this.state.loading}\n                    onInputChange={this.onInputChange}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Search for classes\"\n                            InputProps={{\n                                ...params.InputProps,\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n\n                                endAdornment: (\n                                    <React.Fragment>\n                                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                        {params.InputProps.endAdornment}\n                                    </React.Fragment>\n                                ),\n                            }}\n                        />\n                    )}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default (SearchBar);","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"111","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":22},{"ruleId":"106","severity":1,"message":"112","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":63,"column":89,"nodeType":"115","endLine":63,"endColumn":93},{"ruleId":"102","replacedBy":"116"},{"ruleId":"104","replacedBy":"117"},{"ruleId":"106","severity":1,"message":"118","line":122,"column":15,"nodeType":"108","messageId":"109","endLine":122,"endColumn":18},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"119","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":13},{"ruleId":"106","severity":1,"message":"120","line":65,"column":21,"nodeType":"108","messageId":"109","endLine":65,"endColumn":25},{"ruleId":"106","severity":1,"message":"121","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":24},{"ruleId":"106","severity":1,"message":"122","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":16},{"ruleId":"106","severity":1,"message":"123","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"124","line":7,"column":26,"nodeType":"108","messageId":"109","endLine":7,"endColumn":32},{"ruleId":"106","severity":1,"message":"125","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":25},{"ruleId":"106","severity":1,"message":"126","line":21,"column":8,"nodeType":"108","messageId":"109","endLine":21,"endColumn":14},{"ruleId":"106","severity":1,"message":"127","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"128","line":51,"column":13,"nodeType":"108","messageId":"109","endLine":51,"endColumn":18},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["129"],["130"],"'doc' is assigned a value but never used.","'Modal' is defined but never used.","'user' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Router' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Button' is defined but never used.","'fetch' is defined but never used.","'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]