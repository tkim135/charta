[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx":"10","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx":"11","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx":"12","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx":"13","/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx":"14","/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx":"15","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx":"16","/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx":"17","/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx":"18"},{"size":504,"mtime":1613875847945,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1612064695741,"results":"21","hashOfConfig":"20"},{"size":939,"mtime":1613945405204,"results":"22","hashOfConfig":"20"},{"size":2469,"mtime":1614010242834,"results":"23","hashOfConfig":"20"},{"size":558,"mtime":1613510455077,"results":"24","hashOfConfig":"20"},{"size":1401,"mtime":1613079244111,"results":"25","hashOfConfig":"20"},{"size":8880,"mtime":1614010028739,"results":"26","hashOfConfig":"20"},{"size":10643,"mtime":1613960135904,"results":"27","hashOfConfig":"20"},{"size":527,"mtime":1613079244114,"results":"28","hashOfConfig":"20"},{"size":5783,"mtime":1613945405208,"results":"29","hashOfConfig":"20"},{"size":1456,"mtime":1614008800205,"results":"30","hashOfConfig":"20"},{"size":7568,"mtime":1614008306641,"results":"31","hashOfConfig":"20"},{"size":791,"mtime":1613510455078,"results":"32","hashOfConfig":"20"},{"size":3978,"mtime":1613945405207,"results":"33","hashOfConfig":"20"},{"size":3893,"mtime":1613945405212,"results":"34","hashOfConfig":"20"},{"size":1017,"mtime":1613858167457,"results":"35","hashOfConfig":"20"},{"size":442,"mtime":1613945405213,"results":"36","hashOfConfig":"20"},{"size":845,"mtime":1613945405212,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"waydk2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["82","83"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["84"],"import {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n\n// @ts-ignore\nimport SignIn from './auth/signin';\n// @ts-ignore\nimport SignUp from \"./auth/signup\";\nimport NotFound from './components/notfound'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n// @ts-ignore\nimport Home from './components/home';\nimport Settings from './account/settings';\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route exact path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n\n            </Router>\n\n          );\n    }\n}\n\n\nexport default App;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",["85","86","87","88"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],["89","90"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",["91"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["92"],"import {Component} from \"react\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport '../firebase';\nimport UserCourse from '../data/usercourse';\n\ninterface QuarterState {\n    open: boolean;\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    courses: Array<any>;\n    newCourse: string;\n    newTitle: string;\n    newUnits: number;\n    newGrade: string;\n    newReason: string;\n    totalUnits: number;\n}\ninterface QuarterProps {\n    name: string\n}\nclass Quarter extends Component<QuarterProps, QuarterState> {\n\n\n    // load the courses for this quarter\n   async loadCourses(path: string) {\n       const db = firebase.firestore();\n\n       // doc.data()?.[\"quarters\"];\n\n       let courses: Array<UserCourse> = [];\n       let totalUnits = 0;\n\n       // iterate over courses in this quarter\n       db.collection(path).get().then( (querySnapshot) => {\n\n            // get the course\n           querySnapshot.forEach(async(doc) =>  {\n               // let course = await this.loadCourse(doc);\n               let course = doc.data();\n               console.log(course);\n               courses.push(new UserCourse(course?.code, course?.reason, course?.grade, course?.units, this.props.name, course?.title));\n               totalUnits += course.units;\n           })\n\n\n       });\n\n       this.setState({courses: courses});\n       this.setState({totalUnits: totalUnits});\n\n\n   }\n\n    async componentDidMount() {\n        const db = firebase.firestore();\n        let user = firebase.auth().currentUser;\n        const userRef = db.collection('users').doc(user?.uid);\n        const userData = await userRef.get();\n\n        if (!userData.exists) {\n            console.log('User data could not be found');\n        } else {\n            await this.loadCourses(`users/${user?.uid}/${this.props.name}`);\n        }\n\n    }\n\n\n    constructor(props: QuarterProps) {\n        super(props);\n\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n        this.loadCourses = this.loadCourses.bind(this);\n\n        this.state = {open: false,\n                   onClick: this.handleOpen,\n                   courses: [],\n                 newCourse: '',\n                  newTitle: '',\n                  newGrade: '',\n                  newUnits: 0,\n                 newReason: '',\n                totalUnits: 0,\n                    };\n\n    }\n\n\n    handleOpen() {\n        this.setState({open: true});\n    }\n\n    handleClose() {\n        this.setState({open: false});\n    }\n\n    async addCourse() {\n        // this.state.courses.push(new UserCourse(this.state.newCourse, this.state.newTitle, this.state.newUnits, this.state.newGrade, this.state.newReason));\n\n        const db = firebase.firestore();\n        let user = firebase.auth().currentUser;\n        const userRef = db.collection('users').doc(user?.uid);\n        const doc = await userRef.get();\n\n        // const userRef = db.collection('users').doc('ruben1');\n        // const doc = await userRef.get();\n        //\n        //  .doc('LA').set({\n        //     name: 'Los Angeles', state: 'CA', country: 'USA',\n        //     capital: false, population: 3900000\n        // });\n\n        this.handleClose();\n    }\n\n\n\n    render() {\n\n        return (\n            <Accordion>\n                <AccordionSummary className=\"quarter-summary\">\n                    <div className=\"\">\n                        <h1 id=\"quarter-title\"><strong>{this.props.name}</strong></h1>\n                    </div>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <TableContainer >\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Course Number</TableCell>\n                                    <TableCell align=\"right\">Title</TableCell>\n                                    <TableCell align=\"right\">Units</TableCell>\n                                    <TableCell align=\"right\">Grade</TableCell>\n                                    <TableCell align=\"right\">Reason</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.courses.map((course) => (\n                                    <TableRow key={course.number}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {course.code}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{course.title}</TableCell>\n                                        <TableCell align=\"right\">{course.units}</TableCell>\n                                        <TableCell align=\"right\">{course.grade}</TableCell>\n                                        <TableCell align=\"right\">{course.reason}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                            <TableRow>\n                                <TableCell>Total</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\">{this.state.totalUnits}</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\"><Button onClick={this.handleOpen}><AddCircleIcon/></Button></TableCell>\n\n                                <Dialog open={this.state.open}>\n                                    <DialogTitle>Add a course</DialogTitle>\n                                    <DialogContent>\n                                        {/*<DialogContentText>*/}\n                                        {/*    To subscribe to this website, please enter your email address here. We will send updates*/}\n                                        {/*    occasionally.*/}\n                                        {/*</DialogContentText>*/}\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"course\"\n                                            type=\"text\"\n                                            value={this.state.newCourse}\n                                            onChange={(evt) => this.setState({newCourse: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"title\"\n                                            label=\"title\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newTitle: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"units\"\n                                            label=\"units\"\n                                            type=\"number\"\n                                            onChange={(evt) => this.setState({newUnits: parseInt(evt.target.value)})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"grade\"\n                                            label=\"grade\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newGrade: evt.target.value})}\n                                            fullWidth\n                                        />\n\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"reason\"\n                                            label=\"reason\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newReason: evt.target.value})}\n                                            fullWidth\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleClose} color=\"primary\" className=\"cancelButton\">\n                                            Cancel\n                                        </Button>\n\n                                        <Button onClick={this.addCourse} color=\"primary\">\n                                            Add\n                                        </Button>\n                                    </DialogActions>\n\n                                </Dialog>\n\n                            </TableRow>\n                        </Table>\n\n                    </TableContainer>\n                </AccordionDetails>\n\n            </Accordion>\n\n        );\n    }\n}\n\nexport default Quarter\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],["93","94"],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx",["95","96"],"import React, {Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport { Redirect } from 'react-router'\nimport {Link } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\n\ninterface SigninProps extends RouteComponentProps<any> {\n\n}\n\n\ninterface SigninState{\n    email: string,\n    password: string,\n    redirect: boolean,\n    failed: boolean,\n    errorMsg: string\n}\n\nclass Signin extends Component<SigninProps, SigninState> {\n\n    // componentDidMount() {\n    //     let signedIn = false;\n    //     firebase.auth().onAuthStateChanged(function(user) {\n    //         if (user) {\n    //             signedIn = true;\n    //         }\n    //     });\n    //\n    //     if(signedIn) {\n    //         this.setState({redirect: true});\n    //     }\n    //\n    // }\n\n\n    constructor(props: SigninProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {email: '',  password: '', redirect: false, failed: false, errorMsg: ''}\n        this.handleEmailReset = this.handleEmailReset.bind(this);\n\n    }\n\n\n    handleSubmit(e:  React.FormEvent) {\n        e.preventDefault();\n\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                var user = userCredential.user;\n                this.setState({redirect: true });\n\n            })\n            .catch((error) => {\n                console.log(error.code, error.message);\n                this.setState({failed: true})\n                this.setState({errorMsg: error.message})\n\n            });\n    }\n\n    handleClose() {\n\n    }\n\n    handleEmailReset() {\n\n    }\n\n\n\n\n    render() {\n\n        if(this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n\n        return(\n            <Container maxWidth=\"sm\">\n                <div>\n                    <img alt=\"Charta logo\" src={\"./Logo.png\"}/>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign in\n                    </Typography>\n                    <form noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={(evt) => this.setState({email: evt.target.value})}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(evt) => this.setState({password: evt.target.value})}\n                            autoComplete=\"current-password\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <p>{this.state.errorMsg}</p>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            <strong>Sign In</strong>\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <p onClick={this.handleEmailReset}>\n                                    Forgot password?\n                                </p>\n                            </Grid>\n\n\n                            <Grid item>\n                                <Link to=\"/signup\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(Signin);\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx",["97","98"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx",["99"],"/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx",["100","101","102","103","104","105","106","107","108","109","110","111"],"import React, {Component} from \"react\";\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport Header from \"../components/header\";\nimport Footer from '../components/footer';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport 'firebase/firestore'\nimport '../firebase';\n\n\ninterface SettingsProps extends RouteComponentProps<any> {\n}\n\n\ninterface SettingsState{\n    value: number,\n    index: number\n}\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\n\nclass Settings extends Component<SettingsProps, SettingsState> {\n\n\n    constructor(props: SettingsProps) {\n        super(props);\n        this.state = {value: 0, index: 0}\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n     handleChange (event: React.ChangeEvent<{}>, newValue: number) {\n        this.setState({value: newValue});\n    };\n\n\n    render() {\n\n        return(\n            <div className=\"flex flex-col h-screen justify-between\">\n                <Header/>\n                <Container>\n                    <div>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            aria-label=\"Vertical tabs example\"\n                        >\n                            <Tab label=\"Account\" {...a11yProps(0)} />\n                            <Tab label=\"Settings\" {...a11yProps(1)} />\n                            <Tab label=\"About\" {...a11yProps(2)} />\n                        </Tabs>\n                        <TabPanel value={this.state.value} index={0}>\n                            <div>\n                                <h1>Account</h1>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.value} index={1}>\n                            <div>\n                                <h1>Settings</h1>\n                            </div>\n                        </TabPanel>\n                        <TabPanel value={this.state.value} index={2}>\n                            <div>\n                                <h1>About</h1>\n                            </div>\n                        </TabPanel>\n\n                    </div>\n\n                </Container>\n                <Footer/>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(Settings);","/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx",["112","113"],"import fetch from 'cross-fetch';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {Component} from 'react';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Course from \"../data/course\";\n\n\ninterface SearchBarState {\n    loading: boolean,\n    open: boolean,\n    suggestions: Array<Course>,\n    query: string\n}\n\ninterface SearchBarProps {\n\n}\n\n\n\nclass SearchBar extends Component<SearchBarProps, SearchBarState>{\n\n\n    constructor(props: SearchBarProps) {\n        super(props);\n        this.state = {loading: false, open: false, suggestions: [], query: ''};\n\n        this.setOpen = this.setOpen.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setOpen(open: boolean) {\n\n    }\n\n    async onInputChange(event: object, value: string) {\n\n        const db = firebase.firestore();\n        // const ref = db.collection(\"courses\");\n        // const query  = ref.where(\"title\", \"array-contains\", \"value\");\n\n        const coursesRef = await db.collection('classes');\n\n        var query = coursesRef.where('title', 'array-contains', value).get()\n            .then(querySnapshot => {\n                if (querySnapshot.empty) {\n                    console.log(\"nothing found\");\n\n                } else {\n                    // for(Document doc in querySnapshot.docs) {\n                    //     // var doc = querySnapshot.docs[0];\n                    //     console.log('Document data:', doc.data());\n                    //\n                    // }\n                    querySnapshot.docs.forEach(doc => console.log(doc.data()));\n\n                }\n            })\n            .catch(err => {\n                console.log('Error getting document', err);\n            });\n\n\n    }\n\n    onChange() {\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Autocomplete\n                    id=\"search\"\n                    style={{ width: 600 }}\n                    open={this.state.open}\n                    onOpen={() => {\n                        this.setOpen(true);\n                    }}\n                    onClose={() => {\n                        this.setOpen(false);\n                    }}\n                    options={this.state.suggestions}\n                    getOptionSelected={(course, value) => course.title === value.title}\n                    getOptionLabel={(course) => course.title}\n                    loading={this.state.loading}\n                    onInputChange={this.onInputChange}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Search for classes\"\n                            InputProps={{\n                                ...params.InputProps,\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n\n                                endAdornment: (\n                                    <React.Fragment>\n                                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                        {params.InputProps.endAdornment}\n                                    </React.Fragment>\n                                ),\n                            }}\n                        />\n                    )}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default (SearchBar);","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":18},{"ruleId":"118","severity":1,"message":"123","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":22},{"ruleId":"118","severity":1,"message":"124","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":73,"column":85,"nodeType":"127","endLine":73,"endColumn":89},{"ruleId":"114","replacedBy":"128"},{"ruleId":"116","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":71,"column":43,"nodeType":"132","messageId":"133","endLine":71,"endColumn":45},{"ruleId":"118","severity":1,"message":"134","line":122,"column":15,"nodeType":"120","messageId":"121","endLine":122,"endColumn":18},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"135","line":18,"column":8,"nodeType":"120","messageId":"121","endLine":18,"endColumn":13},{"ruleId":"118","severity":1,"message":"136","line":65,"column":21,"nodeType":"120","messageId":"121","endLine":65,"endColumn":25},{"ruleId":"118","severity":1,"message":"137","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":24},{"ruleId":"118","severity":1,"message":"138","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":7,"column":26,"nodeType":"120","messageId":"121","endLine":7,"endColumn":32},{"ruleId":"118","severity":1,"message":"123","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":22},{"ruleId":"118","severity":1,"message":"140","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"141","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":25},{"ruleId":"118","severity":1,"message":"142","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":16},{"ruleId":"118","severity":1,"message":"143","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"118","severity":1,"message":"144","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":19},{"ruleId":"118","severity":1,"message":"145","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":12},{"ruleId":"118","severity":1,"message":"146","line":16,"column":8,"nodeType":"120","messageId":"121","endLine":16,"endColumn":15},{"ruleId":"118","severity":1,"message":"147","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":16},{"ruleId":"118","severity":1,"message":"148","line":18,"column":8,"nodeType":"120","messageId":"121","endLine":18,"endColumn":20},{"ruleId":"118","severity":1,"message":"149","line":19,"column":8,"nodeType":"120","messageId":"121","endLine":19,"endColumn":20},{"ruleId":"118","severity":1,"message":"150","line":20,"column":8,"nodeType":"120","messageId":"121","endLine":20,"endColumn":20},{"ruleId":"118","severity":1,"message":"151","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"152","line":51,"column":13,"nodeType":"120","messageId":"121","endLine":51,"endColumn":18},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["153"],["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'doc' is assigned a value but never used.","'Modal' is defined but never used.","'user' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Router' is defined but never used.","'EmailIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'firebase' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'SettingsIcon' is defined but never used.","'fetch' is defined but never used.","'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]