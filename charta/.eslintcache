[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx":"10","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx":"11","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx":"12","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx":"13","/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx":"14","/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx":"15","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx":"16","/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx":"17","/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx":"18"},{"size":504,"mtime":1613875847945,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1612064695741,"results":"21","hashOfConfig":"20"},{"size":939,"mtime":1613945405204,"results":"22","hashOfConfig":"20"},{"size":2249,"mtime":1613945405209,"results":"23","hashOfConfig":"20"},{"size":558,"mtime":1613510455077,"results":"24","hashOfConfig":"20"},{"size":1401,"mtime":1613079244111,"results":"25","hashOfConfig":"20"},{"size":5454,"mtime":1613947132134,"results":"26","hashOfConfig":"20"},{"size":10618,"mtime":1613946160581,"results":"27","hashOfConfig":"20"},{"size":527,"mtime":1613079244114,"results":"28","hashOfConfig":"20"},{"size":5783,"mtime":1613945405208,"results":"29","hashOfConfig":"20"},{"size":1442,"mtime":1613945405210,"results":"30","hashOfConfig":"20"},{"size":7509,"mtime":1613945405208,"results":"31","hashOfConfig":"20"},{"size":791,"mtime":1613510455078,"results":"32","hashOfConfig":"20"},{"size":3978,"mtime":1613945405207,"results":"33","hashOfConfig":"20"},{"size":3893,"mtime":1613945405212,"results":"34","hashOfConfig":"20"},{"size":1017,"mtime":1613858167457,"results":"35","hashOfConfig":"20"},{"size":442,"mtime":1613945405213,"results":"36","hashOfConfig":"20"},{"size":845,"mtime":1613945405212,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"waydk2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["78","79"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["80"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",["81","82","83","84"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],["85","86"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",["87"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["88"],"import {Component} from \"react\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport '../firebase';\nimport UserCourse from '../data/usercourse';\n\ninterface QuarterState {\n    open: boolean;\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    courses: Array<any>;\n    newCourse: string;\n    newTitle: string;\n    newUnits: number;\n    newGrade: string;\n    newReason: string;\n    totalUnits: number;\n}\ninterface QuarterProps {\n    name: string\n}\nclass Quarter extends Component<QuarterProps, QuarterState> {\n\n\n    // load the courses for this quarter\n   async loadCourses(path: string) {\n       const db = firebase.firestore();\n\n       // doc.data()?.[\"quarters\"];\n\n       let courses: Array<UserCourse> = [];\n       let totalUnits = 0;\n\n       // iterate over courses in this quarter\n       db.collection(path).get().then( (querySnapshot) => {\n\n            // get the course\n           querySnapshot.forEach(async(doc) =>  {\n               // let course = await this.loadCourse(doc);\n               let course = doc.data();\n               console.log(course);\n               courses.push(new UserCourse(course?.code, course?.reason, course?.grade, course?.units, this.props.name, course?.title));\n               totalUnits += course.units;\n           })\n\n\n       });\n\n       this.setState({courses: courses});\n       this.setState({totalUnits: totalUnits});\n\n\n   }\n\n    async componentDidMount() {\n        const db = firebase.firestore();\n        let user = firebase.auth().currentUser;\n        const userRef = db.collection('users').doc(user?.uid);\n        const userData = await userRef.get();\n\n        if (!userData.exists) {\n            console.log('User data could not be found');\n        } else {\n            await this.loadCourses(`users/${user?.uid}/${this.props.name}`);\n        }\n\n    }\n\n\n    constructor(props: QuarterProps) {\n        super(props);\n\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n        this.loadCourses = this.loadCourses.bind(this);\n\n        this.state = {open: false,\n                   onClick: this.handleOpen,\n                   courses: [],\n                 newCourse: '',\n                  newTitle: '',\n                  newGrade: '',\n                  newUnits: 0,\n                 newReason: '',\n                totalUnits: 0,\n                    };\n\n    }\n\n\n    handleOpen() {\n        this.setState({open: true});\n    }\n\n    handleClose() {\n        this.setState({open: false});\n    }\n\n    async addCourse() {\n        // this.state.courses.push(new UserCourse(this.state.newCourse, this.state.newTitle, this.state.newUnits, this.state.newGrade, this.state.newReason));\n\n        const db = firebase.firestore();\n        let user = firebase.auth().currentUser;\n        const userRef = db.collection('users').doc(user?.uid);\n        const doc = await userRef.get();\n\n        // const userRef = db.collection('users').doc('ruben1');\n        // const doc = await userRef.get();\n        //\n        //  .doc('LA').set({\n        //     name: 'Los Angeles', state: 'CA', country: 'USA',\n        //     capital: false, population: 3900000\n        // });\n\n        this.handleClose();\n    }\n\n\n\n    render() {\n\n        return (\n            <Accordion>\n                <AccordionSummary className=\"quarter-summary\">\n                    <div className=\"\">\n                        <h1 id=\"quarter-title\"><strong>{this.props.name}</strong></h1>\n                    </div>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <TableContainer >\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Course Number</TableCell>\n                                    <TableCell align=\"right\">Title</TableCell>\n                                    <TableCell align=\"right\">Units</TableCell>\n                                    <TableCell align=\"right\">Grade</TableCell>\n                                    <TableCell align=\"right\">Reason</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.courses.map((course) => (\n                                    <TableRow key={course.number}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {course.code}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{course.title}</TableCell>\n                                        <TableCell align=\"right\">{course.units}</TableCell>\n                                        <TableCell align=\"right\">{course.grade}</TableCell>\n                                        <TableCell align=\"right\">{course.reason}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                            <TableRow>\n                                <TableCell>Total</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\">{this.state.totalUnits}</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\"><Button onClick={this.handleOpen}><AddCircleIcon/></Button></TableCell>\n\n                                <Dialog open={this.state.open}>\n                                    <DialogTitle>Add a course</DialogTitle>\n                                    <DialogContent>\n                                        {/*<DialogContentText>*/}\n                                        {/*    To subscribe to this website, please enter your email address here. We will send updates*/}\n                                        {/*    occasionally.*/}\n                                        {/*</DialogContentText>*/}\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"course\"\n                                            type=\"text\"\n                                            value={this.state.newCourse}\n                                            onChange={(evt) => this.setState({newCourse: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"title\"\n                                            label=\"title\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newTitle: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"units\"\n                                            label=\"units\"\n                                            type=\"number\"\n                                            onChange={(evt) => this.setState({newUnits: parseInt(evt.target.value)})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"grade\"\n                                            label=\"grade\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newGrade: evt.target.value})}\n                                            fullWidth\n                                        />\n\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"reason\"\n                                            label=\"reason\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newReason: evt.target.value})}\n                                            fullWidth\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleClose} color=\"primary\">\n                                            Cancel\n                                        </Button>\n\n                                        <Button onClick={this.addCourse} color=\"primary\">\n                                            Add\n                                        </Button>\n                                    </DialogActions>\n\n                                </Dialog>\n\n                            </TableRow>\n                        </Table>\n\n                    </TableContainer>\n                </AccordionDetails>\n\n            </Accordion>\n\n        );\n    }\n}\n\nexport default Quarter\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],["89","90"],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx",["91","92"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx",["93","94","95"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx",["96"],"/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx",["97","98","99","100","101","102","103","104","105","106","107","108"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx",["109","110"],"/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/recommendation.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"120","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":22},{"ruleId":"115","severity":1,"message":"121","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":63,"column":89,"nodeType":"124","endLine":63,"endColumn":93},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"115","severity":1,"message":"127","line":17,"column":8,"nodeType":"117","messageId":"118","endLine":17,"endColumn":16},{"ruleId":"115","severity":1,"message":"128","line":122,"column":15,"nodeType":"117","messageId":"118","endLine":122,"endColumn":18},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"129","line":18,"column":8,"nodeType":"117","messageId":"118","endLine":18,"endColumn":13},{"ruleId":"115","severity":1,"message":"130","line":65,"column":21,"nodeType":"117","messageId":"118","endLine":65,"endColumn":25},{"ruleId":"115","severity":1,"message":"131","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":24},{"ruleId":"115","severity":1,"message":"132","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"115","severity":1,"message":"133","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":18},{"ruleId":"115","severity":1,"message":"134","line":7,"column":26,"nodeType":"117","messageId":"118","endLine":7,"endColumn":32},{"ruleId":"115","severity":1,"message":"120","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":22},{"ruleId":"115","severity":1,"message":"135","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":17},{"ruleId":"115","severity":1,"message":"136","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":25},{"ruleId":"115","severity":1,"message":"137","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":16},{"ruleId":"115","severity":1,"message":"138","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":14},{"ruleId":"115","severity":1,"message":"139","line":13,"column":8,"nodeType":"117","messageId":"118","endLine":13,"endColumn":19},{"ruleId":"115","severity":1,"message":"140","line":14,"column":8,"nodeType":"117","messageId":"118","endLine":14,"endColumn":12},{"ruleId":"115","severity":1,"message":"141","line":16,"column":8,"nodeType":"117","messageId":"118","endLine":16,"endColumn":15},{"ruleId":"115","severity":1,"message":"142","line":17,"column":8,"nodeType":"117","messageId":"118","endLine":17,"endColumn":16},{"ruleId":"115","severity":1,"message":"143","line":18,"column":8,"nodeType":"117","messageId":"118","endLine":18,"endColumn":20},{"ruleId":"115","severity":1,"message":"144","line":19,"column":8,"nodeType":"117","messageId":"118","endLine":19,"endColumn":20},{"ruleId":"115","severity":1,"message":"145","line":20,"column":8,"nodeType":"117","messageId":"118","endLine":20,"endColumn":20},{"ruleId":"115","severity":1,"message":"146","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":13},{"ruleId":"115","severity":1,"message":"147","line":51,"column":13,"nodeType":"117","messageId":"118","endLine":51,"endColumn":18},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["148"],["149"],"'TableRow' is defined but never used.","'doc' is assigned a value but never used.","'Modal' is defined but never used.","'user' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Router' is defined but never used.","'EmailIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'firebase' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'SettingsIcon' is defined but never used.","'fetch' is defined but never used.","'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]