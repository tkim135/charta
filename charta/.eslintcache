[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx":"10","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx":"11","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx":"12","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx":"13","/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx":"14","/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx":"15","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx":"16","/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx":"17"},{"size":504,"mtime":1613510455080,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1612064695741,"results":"20","hashOfConfig":"19"},{"size":939,"mtime":1613515179908,"results":"21","hashOfConfig":"19"},{"size":2249,"mtime":1613756672380,"results":"22","hashOfConfig":"19"},{"size":558,"mtime":1613510455077,"results":"23","hashOfConfig":"19"},{"size":1401,"mtime":1613079244111,"results":"24","hashOfConfig":"19"},{"size":2743,"mtime":1613802081715,"results":"25","hashOfConfig":"19"},{"size":10573,"mtime":1613860052632,"results":"26","hashOfConfig":"19"},{"size":527,"mtime":1613079244114,"results":"27","hashOfConfig":"19"},{"size":5783,"mtime":1613801412406,"results":"28","hashOfConfig":"19"},{"size":1232,"mtime":1613510455078,"results":"29","hashOfConfig":"19"},{"size":6059,"mtime":1613801828849,"results":"30","hashOfConfig":"19"},{"size":791,"mtime":1613510455078,"results":"31","hashOfConfig":"19"},{"size":3978,"mtime":1613860343297,"results":"32","hashOfConfig":"19"},{"size":3893,"mtime":1613766610928,"results":"33","hashOfConfig":"19"},{"size":1017,"mtime":1613858167457,"results":"34","hashOfConfig":"19"},{"size":470,"mtime":1613858167460,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"waydk2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["79","80"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["81"],"import {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n\n// @ts-ignore\nimport SignIn from './auth/signin';\n// @ts-ignore\nimport SignUp from \"./auth/signup\";\nimport NotFound from './components/notfound'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\n// @ts-ignore\nimport Home from './components/home';\nimport Settings from './account/settings';\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route exact path=\"/signin\" component={SignIn} />\n                    <Route exact path=\"/signup\" component={SignUp} />\n                    <Route exact path=\"/settings\" component={Settings} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n\n            </Router>\n\n          );\n    }\n}\n\n\nexport default App;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",["82","83","84","85"],"import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from '@material-ui/core/TextField';\nimport {Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport grey from '@material-ui/core/colors/grey';\nimport SearchBar from \"./searchbar\";\ninterface HeaderProps {\n\n}\n\ninterface HeaderState {\n    displayName: string\n}\n\n\n\nclass Header extends Component<HeaderProps, HeaderState>{\n\n    componentDidMount() {\n        let displayName = firebase.auth().currentUser?.displayName;\n        if(displayName) this.setState({displayName: displayName});\n    }\n\n\n    constructor(props: HeaderProps) {\n        super(props);\n        this.handleSignout = this.handleSignout.bind(this);\n        this.state = {displayName: \"\"};\n    }\n\n    handleSignout() {\n        firebase.auth().signOut().then(() => {\n            console.log('sign out successful');\n        }).catch((error) => {\n            console.log(error.code, error.message);\n        });\n\n    }\n\n    render(){\n       return (\n        <header className=\"header\">\n          <AppBar position=\"static\">\n            <Toolbar>\n\n                <Box display='flex' flexGrow={1}>\n                    <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">  </IconButton>\n                    <Button><h1 id=\"title\"><Link to=\"/home\">Charta</Link> </h1></Button>\n\n                    <SearchBar/>\n\n                </Box>\n                <Link to={\"settings\"}><Button startIcon={<SettingsIcon style={{ color: grey[50] }}/>}/></Link>\n                {this.state.displayName ?  <h1>Welcome, {this.state.displayName}</h1> : <h1></h1>}\n                <Button color=\"inherit\" onClick={this.handleSignout}><Link to=\"/signin\">Sign out</Link></Button>\n\n            </Toolbar>\n              \n            </AppBar>\n        </header>\n       );\n    }\n}\n\nexport default Header\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],["86","87"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["88","89","90","91","92"],"/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],["93","94"],"/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signin.tsx",["95","96"],"import React, {Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport { Redirect } from 'react-router'\nimport {Link } from 'react-router-dom';\nimport Modal from '@material-ui/core/Modal';\n\ninterface SigninProps extends RouteComponentProps<any> {\n\n}\n\n\ninterface SigninState{\n    email: string,\n    password: string,\n    redirect: boolean,\n    failed: boolean,\n    errorMsg: string\n}\n\nclass Signin extends Component<SigninProps, SigninState> {\n\n    // componentDidMount() {\n    //     let signedIn = false;\n    //     firebase.auth().onAuthStateChanged(function(user) {\n    //         if (user) {\n    //             signedIn = true;\n    //         }\n    //     });\n    //\n    //     if(signedIn) {\n    //         this.setState({redirect: true});\n    //     }\n    //\n    // }\n\n\n    constructor(props: SigninProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {email: '',  password: '', redirect: false, failed: false, errorMsg: ''}\n        this.handleEmailReset = this.handleEmailReset.bind(this);\n\n    }\n\n\n    handleSubmit(e:  React.FormEvent) {\n        e.preventDefault();\n\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                var user = userCredential.user;\n                this.setState({redirect: true });\n\n            })\n            .catch((error) => {\n                console.log(error.code, error.message);\n                this.setState({failed: true})\n                this.setState({errorMsg: error.message})\n\n            });\n    }\n\n    handleClose() {\n\n    }\n\n    handleEmailReset() {\n\n    }\n\n\n\n\n    render() {\n\n        if(this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n\n        return(\n            <Container maxWidth=\"sm\">\n                <div>\n                    <img alt=\"Charta logo\" src={\"./Logo.png\"}/>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign in\n                    </Typography>\n                    <form noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={(evt) => this.setState({email: evt.target.value})}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(evt) => this.setState({password: evt.target.value})}\n                            autoComplete=\"current-password\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <p>{this.state.errorMsg}</p>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            <strong>Sign In</strong>\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <p onClick={this.handleEmailReset}>\n                                    Forgot password?\n                                </p>\n                            </Grid>\n\n\n                            <Grid item>\n                                <Link to=\"/signup\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(Signin);\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/components/home.tsx",["97"],"import React, {Component} from 'react';\n// import logo from './logo.svg';\n// import { BrowserRouter, Route, } from 'react-router-dom';\n// import Login from './login';\nimport Header from './header';\nimport Footer from './footer';\n// @ts-ignore\n// import ClassCard from './card';\n// @ts-ignore\nimport Planner from './planner';\n\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport {Redirect} from \"react-router\";\n\ninterface HomeState {\n    signedIn: boolean\n}\n\ninterface HomeProps {\n\n}\n\nclass Home extends Component<HomeProps, HomeState>{\n\n    constructor(props: HomeProps) {\n        super(props);\n        this.state = {signedIn: false}\n    }\n\n\n    render() {\n\n        if(firebase.auth().currentUser){\n            return (\n                <div className=\"flex flex-col h-screen justify-between\">\n                    <Header/>\n                    {/*<ClassCard name=\"Math 51\" term=\"Spring 2021\"/>*/}\n                    {/*<ClassCard name=\"CS 110\" term=\"Winter 2021\"/>*/}\n                    <Planner/>\n                    <Footer/>\n\n                </div>\n            );\n        }\n        else{\n            return <Redirect to='/signin'/>;\n        }\n    }\n\n\n\n}\n\n\nexport default Home;\n\n\n\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/auth/signup.tsx",["98","99"],"import React, {Component} from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LockIcon from '@material-ui/icons/Lock';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { withRouter } from 'react-router'\nimport {RouteComponentProps} from \"react-router\";\nimport { Redirect } from 'react-router'\nimport logo from '.Logo.png';\nimport {Link} from \"react-router-dom\";\n\n\ninterface SignUpProps extends RouteComponentProps<any> {\n\n}\n\n\ninterface SignUpState{\n    email: string,\n    password: string,\n    confirmPassword: string,\n    redirect: boolean,\n    errorMsg: string\n}\n\n\nclass SignUp extends Component<SignUpProps, SignUpState> {\n\n\n    constructor(props: SignUpProps) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {email: '',  password: '', confirmPassword: '', redirect: false, errorMsg: ''}\n\n    }\n\n\n    handleSubmit(e:  React.FormEvent) {\n        e.preventDefault();\n\n        if(!this.state.email.endsWith(\"@stanford.edu\")) {\n            this.setState({errorMsg: \"Email must be a stanford email\"});\n            return;\n        }\n\n        if(this.state.password !== this.state.confirmPassword) {\n            this.setState({errorMsg: \"Passwords must match\"});\n            return;\n        }\n\n\n\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                var user = userCredential.user;\n                this.setState({redirect: true})\n\n            })\n            .catch((error) => {\n                this.setState({errorMsg: error.message})\n            });\n\n    }\n\n\n    render() {\n        if(this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n\n        return(\n            <Container maxWidth=\"sm\">\n                <div>\n\n\n                    <img alt=\"Charta logo\" src={\"./Logo.png\"}/>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign up\n                    </Typography>\n\n                    <form noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            onChange={(evt) => this.setState({email: evt.target.value})}\n                            autoFocus\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <EmailIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(evt) => this.setState({password: evt.target.value})}\n\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Confirm password\"\n                            type=\"password\"\n                            id=\"confirmPassword\"\n                            onChange={(evt) => this.setState({confirmPassword: evt.target.value})}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <LockIcon />\n                                    </InputAdornment>\n                                )}}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox color=\"primary\" required={true}/>}\n                            label=\"I agree to the terms and conditions\"\n                        />\n                        <p>{this.state.errorMsg}</p>\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link to=\"/signin\">\n                                    {\"Have an account?\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(SignUp);","/Users/rubenkrueger/Downloads/Team3/charta/src/components/notfound.tsx",["100"],"/Users/rubenkrueger/Downloads/Team3/charta/src/account/settings.tsx",["101","102","103","104","105","106","107","108","109","110","111","112"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/searchbar.tsx",["113","114"],"import fetch from 'cross-fetch';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {Component} from 'react';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport Course from \"../data/course\";\n\n\ninterface SearchBarState {\n    loading: boolean,\n    open: boolean,\n    suggestions: Array<Course>,\n    query: string\n}\n\ninterface SearchBarProps {\n\n}\n\n\n\nclass SearchBar extends Component<SearchBarProps, SearchBarState>{\n\n\n    constructor(props: SearchBarProps) {\n        super(props);\n        this.state = {loading: false, open: false, suggestions: [], query: ''};\n\n        this.setOpen = this.setOpen.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setOpen(open: boolean) {\n\n    }\n\n    async onInputChange(event: object, value: string) {\n\n        const db = firebase.firestore();\n        // const ref = db.collection(\"courses\");\n        // const query  = ref.where(\"title\", \"array-contains\", \"value\");\n\n        const coursesRef = await db.collection('classes');\n\n        var query = coursesRef.where('title', 'array-contains', value).get()\n            .then(querySnapshot => {\n                if (querySnapshot.empty) {\n                    console.log(\"nothing found\");\n\n                } else {\n                    // for(Document doc in querySnapshot.docs) {\n                    //     // var doc = querySnapshot.docs[0];\n                    //     console.log('Document data:', doc.data());\n                    //\n                    // }\n                    querySnapshot.docs.forEach(doc => console.log(doc.data()));\n\n                }\n            })\n            .catch(err => {\n                console.log('Error getting document', err);\n            });\n\n\n    }\n\n    onChange() {\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Autocomplete\n                    id=\"search\"\n                    style={{ width: 600 }}\n                    open={this.state.open}\n                    onOpen={() => {\n                        this.setOpen(true);\n                    }}\n                    onClose={() => {\n                        this.setOpen(false);\n                    }}\n                    options={this.state.suggestions}\n                    getOptionSelected={(course, value) => course.title === value.title}\n                    getOptionLabel={(course) => course.title}\n                    loading={this.state.loading}\n                    onInputChange={this.onInputChange}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"outlined\"\n                            label=\"Search for classes\"\n                            InputProps={{\n                                ...params.InputProps,\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n\n                                endAdornment: (\n                                    <React.Fragment>\n                                        {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                        {params.InputProps.endAdornment}\n                                    </React.Fragment>\n                                ),\n                            }}\n                        />\n                    )}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default (SearchBar);","/Users/rubenkrueger/Downloads/Team3/charta/src/data/course.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/data/usercourse.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"124","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":22},{"ruleId":"119","severity":1,"message":"125","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":63,"column":89,"nodeType":"128","endLine":63,"endColumn":93},{"ruleId":"115","replacedBy":"129"},{"ruleId":"117","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":23,"column":8,"nodeType":"121","messageId":"122","endLine":23,"endColumn":14},{"ruleId":"119","severity":1,"message":"132","line":43,"column":15,"nodeType":"121","messageId":"122","endLine":43,"endColumn":17},{"ruleId":"119","severity":1,"message":"132","line":58,"column":14,"nodeType":"121","messageId":"122","endLine":58,"endColumn":16},{"ruleId":"119","severity":1,"message":"133","line":62,"column":12,"nodeType":"121","messageId":"122","endLine":62,"endColumn":38},{"ruleId":"119","severity":1,"message":"134","line":123,"column":15,"nodeType":"121","messageId":"122","endLine":123,"endColumn":18},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"135","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":13},{"ruleId":"119","severity":1,"message":"136","line":65,"column":21,"nodeType":"121","messageId":"122","endLine":65,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":12,"column":27,"nodeType":"121","messageId":"122","endLine":12,"endColumn":33},{"ruleId":"119","severity":1,"message":"138","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":12},{"ruleId":"119","severity":1,"message":"136","line":65,"column":21,"nodeType":"121","messageId":"122","endLine":65,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":7,"column":26,"nodeType":"121","messageId":"122","endLine":7,"endColumn":32},{"ruleId":"119","severity":1,"message":"124","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"139","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"140","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"141","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":16},{"ruleId":"119","severity":1,"message":"142","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":14},{"ruleId":"119","severity":1,"message":"143","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":19},{"ruleId":"119","severity":1,"message":"144","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":12},{"ruleId":"119","severity":1,"message":"145","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":15},{"ruleId":"119","severity":1,"message":"146","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"119","severity":1,"message":"147","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":20},{"ruleId":"119","severity":1,"message":"148","line":19,"column":8,"nodeType":"121","messageId":"122","endLine":19,"endColumn":20},{"ruleId":"119","severity":1,"message":"149","line":20,"column":8,"nodeType":"121","messageId":"122","endLine":20,"endColumn":20},{"ruleId":"119","severity":1,"message":"150","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"151","line":51,"column":13,"nodeType":"121","messageId":"122","endLine":51,"endColumn":18},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"@typescript-eslint/no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["152"],["153"],"'Course' is defined but never used.","'db' is assigned a value but never used.","'courses' is defined but never used.","'doc' is assigned a value but never used.","'Modal' is defined but never used.","'user' is assigned a value but never used.","'Router' is defined but never used.","'logo' is defined but never used.","'EmailIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'firebase' is defined but never used.","'Drawer' is defined but never used.","'CssBaseline' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'SettingsIcon' is defined but never used.","'fetch' is defined but never used.","'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]