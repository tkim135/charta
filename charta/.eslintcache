[{"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx":"1","/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts":"2","/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx":"3","/Users/rubenkrueger/Downloads/Team3/charta/src/login.tsx":"4","/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx":"5","/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx":"6","/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx":"7","/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx":"8","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx":"9","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js":"10"},{"size":500,"mtime":1612064695740,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1612064695741,"results":"13","hashOfConfig":"12"},{"size":1199,"mtime":1613078616609,"results":"14","hashOfConfig":"12"},{"size":157,"mtime":1612473020658,"results":"15","hashOfConfig":"12"},{"size":1169,"mtime":1612824529969,"results":"16","hashOfConfig":"12"},{"size":570,"mtime":1612906154344,"results":"17","hashOfConfig":"12"},{"size":1401,"mtime":1612973244983,"results":"18","hashOfConfig":"12"},{"size":1877,"mtime":1612995377481,"results":"19","hashOfConfig":"12"},{"size":9037,"mtime":1612999074506,"results":"20","hashOfConfig":"12"},{"size":527,"mtime":1613076472658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"waydk2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rubenkrueger/Downloads/Team3/charta/src/index.tsx",[],["46","47"],"/Users/rubenkrueger/Downloads/Team3/charta/src/reportWebVitals.ts",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/App.tsx",["48","49","50","51"],"/Users/rubenkrueger/Downloads/Team3/charta/src/login.tsx",[],["52","53"],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/header.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/footer.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/card.tsx",[],"/Users/rubenkrueger/Downloads/Team3/charta/src/components/planner.tsx",["54","55"],"import {Component} from 'react';\nimport Quarter from './quarter';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nclass Planner extends Component {\n\n\n\n    render() {\n        const terms = ['Fall 2017',\n                         'Winter 2017',\n                         'Spring 2018',\n                          'Fall 2018',\n                          'Winter 2019',\n                          'Spring 2019',\n                          'Fall 2019',\n                            'Winter 2020',\n                           'Spring 2020',\n                            'Fall 2020',\n                            'Winter 2021',\n                            'Spring 2021']\n\n        return(\n            <div>\n                <h1>Courses</h1>\n                <Grid container spacing={3}>\n\n                    <Grid item xs={4}>\n                        <Quarter quarter={'Fall 2017'}/>\n                        <Quarter quarter={'Fall 2018'}/>\n                        <Quarter quarter={'Fall 2019'}/>\n                        <Quarter quarter={'Fall 2020'}/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Quarter quarter={'Winter 2018'}/>\n                        <Quarter quarter={'Winter 2019'}/>\n                        <Quarter quarter={'Winter 2020'}/>\n                        <Quarter quarter={'Winter 2021'}/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Quarter quarter={'Spring 2018'}/>\n                        <Quarter quarter={'Spring 2019'}/>\n                        <Quarter quarter={'Spring 2020'}/>\n                        <Quarter quarter={'Spring 2021'}/>\n\n                    </Grid>\n\n                </Grid>\n                    {/*{terms.map((term) => <Quarter quarter={term}/>)}*/}\n\n            </div>\n        );\n    }\n\n\n}\n\n\nexport default Planner;","/Users/rubenkrueger/Downloads/Team3/charta/src/components/quarter.tsx",["56"],"import {Component} from \"react\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\n\ninterface QuarterState {\n    open: boolean;\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\n    courses: Array<any>;\n    newCourse: string;\n    newTitle: string;\n    newUnits: number;\n    newGrade: string;\n    newReason: string;\n}\ninterface QuarterProps {\n    quarter: string\n}\n\nclass Quarter extends Component<QuarterProps, QuarterState> {\n\n    componentDidMount() {\n\n    }\n\n    constructor(props: QuarterProps, state: QuarterState) {\n        super(props);\n\n        const courses = [\n            this.createData('CS110', 'Principles of Computer Systems', 5, 'A', 'CS Core'),\n            this.createData('MATH51', 'Linear Algebra and Differential Calculus of Several Variables', 5, 'A', \"Math elective\"),\n            this.createData('BIOE131', 'Ethics in Bioengineering', 3, 'A', \"TiS\"),\n            this.createData('PSYCH1', 'Introduction to Psychology', 5, 'A', \"Fun\"),\n        ];\n\n\n        this.handleOpen = this.handleOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n\n        this.state = {open: false, onClick: this.handleOpen, courses: courses, newCourse: '', newTitle: '', newGrade: '', newUnits: 0, newReason: ''};\n\n\n    }\n\n\n    handleOpen() {\n        this.setState({open: true});\n    }\n\n    handleClose() {\n        this.setState({open: false});\n    }\n\n    addCourse() {\n        this.state.courses.push(this.createData(this.state.newCourse, this.state.newTitle, this.state.newUnits, this.state.newGrade, this.state.newReason));\n        this.handleClose();\n    }\n\n    createData(number: string, title: string, units: number, grade: string, reason: string) {\n        return {number, title, units, grade, reason };\n    }\n\n    render() {\n\n        return (\n            <Accordion>\n                <AccordionSummary>{this.props.quarter}</AccordionSummary>\n                <AccordionDetails>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Course Number</TableCell>\n                                    <TableCell align=\"right\">Title</TableCell>\n                                    <TableCell align=\"right\">Units</TableCell>\n                                    <TableCell align=\"right\">Grade</TableCell>\n                                    <TableCell align=\"right\">Reason</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.courses.map((course) => (\n                                    <TableRow key={course.number}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {course.number}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{course.title}</TableCell>\n                                        <TableCell align=\"right\">{course.units}</TableCell>\n                                        <TableCell align=\"right\">{course.grade}</TableCell>\n                                        <TableCell align=\"right\">{course.reason}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                            <TableRow>\n                                <TableCell>Total</TableCell>\n                                <TableCell align=\"right\"> </TableCell>\n                                <TableCell align=\"right\">18</TableCell>\n                                <TableCell align=\"right\">4.0</TableCell>\n                                <TableCell align=\"right\"><Button onClick={this.handleOpen}><AddCircleIcon/></Button></TableCell>\n\n                                <Dialog open={this.state.open}>\n                                    <DialogTitle>Add a course</DialogTitle>\n                                    <DialogContent>\n                                        {/*<DialogContentText>*/}\n                                        {/*    To subscribe to this website, please enter your email address here. We will send updates*/}\n                                        {/*    occasionally.*/}\n                                        {/*</DialogContentText>*/}\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"name\"\n                                            label=\"course\"\n                                            type=\"text\"\n                                            value={this.state.newCourse}\n                                            onChange={(evt) => this.setState({newCourse: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"title\"\n                                            label=\"title\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newTitle: evt.target.value})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"units\"\n                                            label=\"units\"\n                                            type=\"number\"\n                                            onChange={(evt) => this.setState({newUnits: parseInt(evt.target.value)})}\n                                            fullWidth\n                                        />\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"grade\"\n                                            label=\"grade\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newGrade: evt.target.value})}\n                                            fullWidth\n                                        />\n\n\n                                        <TextField\n                                            autoFocus\n                                            margin=\"dense\"\n                                            id=\"reason\"\n                                            label=\"reason\"\n                                            type=\"text\"\n                                            onChange={(evt) => this.setState({newReason: evt.target.value})}\n                                            fullWidth\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleClose} color=\"primary\">\n                                            Cancel\n                                        </Button>\n\n                                        <Button onClick={this.addCourse} color=\"primary\">\n                                            Add\n                                        </Button>\n                                    </DialogActions>\n\n                                </Dialog>\n\n                            </TableRow>\n                        </Table>\n\n                    </TableContainer>\n                </AccordionDetails>\n\n            </Accordion>\n\n        );\n    }\n}\n\nexport default Quarter\n\n","/Users/rubenkrueger/Downloads/Team3/charta/src/firebase.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":23},{"ruleId":"61","severity":1,"message":"66","line":4,"column":25,"nodeType":"63","messageId":"64","endLine":4,"endColumn":30},{"ruleId":"61","severity":1,"message":"67","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"57","replacedBy":"68"},{"ruleId":"59","replacedBy":"69"},{"ruleId":"61","severity":1,"message":"70","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"71","line":11,"column":15,"nodeType":"63","messageId":"64","endLine":11,"endColumn":20},{"ruleId":"61","severity":1,"message":"72","line":18,"column":8,"nodeType":"63","messageId":"64","endLine":18,"endColumn":25},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Login' is defined but never used.",["73"],["74"],"'Paper' is defined but never used.","'terms' is assigned a value but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation"]